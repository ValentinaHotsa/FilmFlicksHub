{"version":3,"file":"static/js/873.4b428db4.chunk.js","mappings":"0MACA,GAAgB,gBAAkB,gCAAgC,WAAa,2BAA2B,WAAa,2BAA2B,iBAAmB,iCAAiC,WAAa,2BAA2B,YAAc,4BAA4B,mBAAqB,mCAAmC,UAAY,2B,SCoF5V,EA/Ee,WAAO,IAADA,EACnBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAEpCI,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA/BG,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,EAAiC,QAA5BZ,EAAGK,EAAaQ,IAAI,gBAAQ,IAAAb,EAAAA,EAAI,GACrCc,EAAS,mCACTC,GAAWC,EAAAA,EAAAA,OAgBjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAG,qDAAAC,OAAwDL,EAAM,WAAAK,OAAUP,GAEjFQ,MAAMF,GACHG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IACtBF,MAAK,SAAAG,GAAI,OAAIb,EAASa,EAAKC,QAAQ,IACnCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,SAAUF,EAAI,GAC9C,GAAG,CAACb,EAAQF,IASZ,OACEkB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,gBAAoBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,QAAMC,SATW,SAAAC,GACnBA,EAAEC,iBACY,KAAVzB,GACF0B,MAAM,oCAGV,EAGiCL,UAC3BC,EAAAA,EAAAA,KAAA,SACEH,UAAWC,EAAAA,YACXO,KAAK,OACLC,MAAO5B,EACP6B,SA9Ba,SAAAL,GACnB,GAAuB,KAAnBA,EAAEM,OAAOF,MACX,OAAOlC,EAAgB,CAAC,GAE1BA,EAAgB,CAAEM,MAAOwB,EAAEM,OAAOF,OACpC,EA0BQG,YAAY,gBACZC,WAAS,OAIbV,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAAA,cAAkBC,UAChCH,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAAA,WAAeC,SAAA,CAC3B,GACAvB,EAAMmC,KAAI,SAAAC,GAAI,OACbZ,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAAA,WAAeC,UAC5BC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CACHhB,UAAWC,EAAAA,WACXgB,GAAE,WAAA7B,OAAa2B,EAAKG,IACpBC,MAAO,CAAEC,KAAMpC,GAAWkB,SAEzBa,EAAKM,cACJtB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,mBAAuBC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,OACEH,UAAWC,EAAAA,UACXqB,IAAG,kCAAAlC,OAAoC2B,EAAKM,aAC5CE,IAAKR,EAAKS,SAEZrB,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAAA,iBAAqBC,SAAEa,EAAKS,cAbdT,EAAKG,GAiBpC,WAMjB,C","sources":["webpack://film-flicks-hub/./src/pages/moviesList/movies.module.css?feab","pages/moviesList/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchContainer\":\"movies_searchContainer__-hV7V\",\"searchList\":\"movies_searchList__AI93M\",\"searchLink\":\"movies_searchLink__ClDcY\",\"searchMovieTitle\":\"movies_searchMovieTitle__H5-up\",\"searchItem\":\"movies_searchItem__jv0jT\",\"searchInput\":\"movies_searchInput__C0YtF\",\"searchImgContainer\":\"movies_searchImgContainer__tz673\",\"searchImg\":\"movies_searchImg__Akprr\"};","// пошук по назві фільма та відображення інфо про фільм\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport css from './movies.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  // const [value, setValue] = useState(searchParams.get('query') || '');\n  const [files, setFiles] = useState([]);\n  const query = searchParams.get('query') ?? '';\n  const apiKey = '3af213f4135af108020907fe62a17696';\n  const location = useLocation();\n  // const handleSearch = () => {\n  //   setSearchParams({ query: value });\n  //   if (!value) {\n  //     setFiles([]);\n  //     return;\n  //   }\n  // };\n\n  const handleChange = e => {\n    if (e.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: e.target.value });\n  };\n\n  useEffect(() => {\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`;\n\n    fetch(url)\n      .then(res => res.json())\n      .then(data => setFiles(data.results))\n      .catch(err => console.error('error:', err));\n  }, [apiKey, query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query === '') {\n      alert('Please, enter something to search');\n      return;\n    }\n  };\n  return (\n    <div className={css.searchContainer}>\n      <form onSubmit={handleSubmit}>\n        <input\n          className={css.searchInput}\n          type=\"text\"\n          value={query}\n          onChange={handleChange}\n          placeholder=\"Search movies\"\n          autoFocus\n        />\n        {/* <button type=\"submit\">Search</button> */}\n      </form>\n      <div className={css.listContainer}>\n        <ul className={css.searchList}>\n          {''}\n          {files.map(file => (\n            <li className={css.searchItem} key={file.id}>\n              <Link\n                className={css.searchLink}\n                to={`/movies/${file.id}`}\n                state={{ from: location }}\n              >\n                {file.poster_path && (\n                  <div className={css.searchImgContainer}>\n                    <img\n                      className={css.searchImg}\n                      src={`https://image.tmdb.org/t/p/w200${file.poster_path}`}\n                      alt={file.title}\n                    />\n                    <p className={css.searchMovieTitle}>{file.title}</p>\n                  </div>\n                )}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","files","setFiles","query","get","apiKey","location","useLocation","useEffect","url","concat","fetch","then","res","json","data","results","catch","err","console","error","_jsxs","className","css","children","_jsx","onSubmit","e","preventDefault","alert","type","value","onChange","target","placeholder","autoFocus","map","file","Link","to","id","state","from","poster_path","src","alt","title"],"sourceRoot":""}